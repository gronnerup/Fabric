# Fabric notebook source

# METADATA ********************

# META {
# META   "kernel_info": {
# META     "name": "jupyter",
# META     "jupyter_kernel_name": "python3.11"
# META   },
# META   "dependencies": {}
# META }

# MARKDOWN ********************

# <center>
# 
# ![aquashack_logo_cutted.png](attachment:0848e442-9da2-49a8-957c-57fda67da9ca.png)
# 
# # **Setup AquaShack - Data**
# 
# </center>
# 
# This notebook sets up the AquaShack lakehouse example, a pico-example of a meta-data driven lakehouse for Microsoft Fabric.
# 
# This version of AquaShack is a copy of the AquaShack solution developed by Christian Henrik Reich which is available on GitHub (https://github.com/ChristianHenrikReich/AquaShack)
# 
# **Steps this notebook executes:**
# - Define variables and various utility functions needed
# - Get lakehouse and Fabric Database references
# - Fetch sample CSV files from remote github repo
# - Populating Fabric SQL Database with sample metadata for data ingest, preparation and orchestration
# - Create shortcuts in Landing lakehouse for metadata tables

# ATTACHMENTS ********************

# ATTA {
# ATTA   "0848e442-9da2-49a8-957c-57fda67da9ca.png": {
# ATTA     "image/png": ""
# ATTA   },
# ATTA   "image.png": {
# ATTA     "image/png": ""
# ATTA   }
# ATTA }

# CELL ********************

import sempy.fabric as fabric
client = fabric.FabricRestClient()

SOLUTION_NAME = '*FabCon'
PREPARE_LAYER_NAME = 'Prepare'
STORE_LAYER_NAME = 'Store'

PREPARE_WORKSPACE = fabric.get_workspace_id()
STORE_WORKSPACE = fabric.resolve_workspace_id(f"{SOLUTION_NAME} - {STORE_LAYER_NAME} [dev]")


# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

# Assuming first lakehouse is where data is ingested to
LAKEHOUSE_NAMES = ["Landing", "Base", "Curated"]

GITHUB_ACCOUNT = "https://raw.githubusercontent.com/ChristianHenrikReich/AquaShack/refs/heads/main"

DATA_FILES = [
    (f"{GITHUB_ACCOUNT}/data/Sales/Customers/Customers.csv", "/Files/data/Sales/Customers/Customers.csv"),
    (f"{GITHUB_ACCOUNT}/data/Sales/Products/Products.parquet", "/Files/data/Sales/Products/Products.parquet"),
    (f"{GITHUB_ACCOUNT}/data/Sales/Transactions/Transactions.csv", "/Files/data/Sales/Transactions/Transactions.csv")
]

MAX_WORKERS = 5

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

METADATA_DATABASE_ID = fabric.resolve_item_id("Metadata", "SQLDatabase", STORE_WORKSPACE)

METADATA_DATABASE = client.get(f"https://api.fabric.microsoft.com/v1/workspaces/{STORE_WORKSPACE}/SQLDatabases/{METADATA_DATABASE_ID}").json()

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

#######################################################
#                      Functions                      #
#######################################################

from concurrent.futures import ThreadPoolExecutor
import os
import requests
import struct
import pyodbc

def _create_or_get_lakehouses(lakehouse_name: list, workspace_id: str) -> dict:
    lakehouses = {}

    print("→ Get or create Lakehouses")

    for lakehouse_name in lakehouse_name:
        lakehouse_info = None
        try:
            lakehouse_info = notebookutils.lakehouse.get(name=lakehouse_name, workspaceId=workspace_id)
            print(f"  - Found Lakehouse: {lakehouse_name} in workspace {workspace_id}")
        except:
            lakehouse_info = notebookutils.lakehouse.create(lakehouse_name, workspaceId=workspace_id)
            print("  - Creating Lakehouse: {lakehouse_name} in workspace {workspace_id}")

        lakehouses[lakehouse_name] = lakehouse_info
    return lakehouses

def _get_from_git(url: str):
    print (f"  - File: {url}")
    
    response = requests.get(url)
    response.raise_for_status()

    return response


def _save_file_from_git(url: str, save_path: str):
    file_content = _get_from_git(url).content

    print (f"    Writing to: {save_path}")
    folders = os.path.dirname(save_path)
    os.makedirs(folders, exist_ok=True)

    with open(save_path, "wb") as file:
        file.write(file_content)

def _save_notebook_from_git(url: str, default_lakehouse: str=""): # Not used in this showcase. Kept from forked repo...
    file_content = _get_from_git(url).text

    file_name = os.path.basename(url)
    notebook_name = os.path.splitext(file_name)[0]

    try:
        print (f"Writing notebook: {notebook_name} with default_lakehouse: {default_lakehouse}")
        notebookutils.notebook.create(name=notebook_name, content=file_content, defaultLakehouse=default_lakehouse)
    except:
        print (f"Already exists, updating notebook: {notebook_name} with default_lakehouse: {default_lakehouse}")
        notebookutils.notebook.updateDefinition(name=notebook_name, content=file_content, defaultLakehouse=default_lakehouse)


def get_fabric_database_connection(access_token, server_fqdn, database_name):
    conn_str = (
        f"DRIVER={{ODBC Driver 18 for SQL Server}};"
        f"SERVER={server_fqdn};"
        f"DATABASE={database_name};"
    )

    tokenb = bytes(access_token, "UTF-8")

    exptoken = b'';
    for i in tokenb:
        exptoken += bytes({i});
        exptoken += bytes(1);
        tokenstruct = struct.pack("=i", len(exptoken)) + exptoken;

    try:
        conn = pyodbc.connect(conn_str, attrs_before = { 1256:tokenstruct});
        return conn
    except pyodbc.Error as ex:
        print(f"Error connection to Fabric SQL Database: {ex}")


def sql_execute_nonquery(conn, sql_nonquery):
    try:
        cursor = conn.cursor()
        cursor.execute(sql_nonquery)
        conn.commit()
        cursor.close()
        print("Done!")
    except pyodbc.DatabaseError as ex:
        print(f"Error running non-query SQL script: {ex}")

def create_sqldb_shortcut(lakehouse_id, sql_database_id, table_name, path):
    print(f"→ Creating shortcut for Metadata table {table_name} in Landing lakehouse... ", end="")

    payload = {
        "name": table_name,
        "path": "/Tables",
        "target": {
            "type": "OneLake",
            "oneLake": {
            "itemId": sql_database_id,
            "path": path,
            "workspaceId": STORE_WORKSPACE
            }
        }
    }

    try:
        client.post(f"https://api.fabric.microsoft.com/v1/workspaces/{STORE_WORKSPACE}/items/{lakehouse_id}/shortcuts", json=payload)
        print("Done!")
    except:
        try:
            client.get(f"https://api.fabric.microsoft.com/v1/workspaces/{STORE_WORKSPACE}/items/{lakehouse_id}/shortcuts/Tables/landing_to_base")
            print("Skipped! Shortcut already exists.")
        except:
            print("Failed! Unexpected error occured.")


# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

lakehouses = _create_or_get_lakehouses(LAKEHOUSE_NAMES, STORE_WORKSPACE)
lakehouse_path = LAKEHOUSE_NAMES[0].lower()
print (f"\n→ Mounting {LAKEHOUSE_NAMES[0]} to /{lakehouse_path}... ", end="")

notebookutils.fs.mount(
   lakehouses['Landing'].properties["abfsPath"],
   f"/{lakehouse_path}",
   {"fileCacheTimeout": 0, "timeout": 120}
)

lakehouse_mount_path = notebookutils.fs.getMountPath(f"/{lakehouse_path}")

print("\n→ Fetching files")
for data_file_url, data_file_destination in DATA_FILES:
    _save_file_from_git(url=data_file_url, save_path=f"{lakehouse_mount_path}{data_file_destination}")

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

sql_script = """
    TRUNCATE TABLE landing_to_base;
    TRUNCATE TABLE source_ingest_conn;
    TRUNCATE TABLE source_ingest_obj;
    TRUNCATE TABLE notebook_orchestrator;

    INSERT INTO landing_to_base
        (source,
        format,
        destination,
        projected_columns)
                
    SELECT 
        'Files/data/Sales/Customers/Customers.csv',
        'csv',
        'sales_customers',
        '["CustomerID", "FirstName", "LastName"]'
    UNION
    SELECT 
        'Files/data/Sales/Products/Products.parquet',
        'parquet',
        'sales_products',
        '[]'
    UNION
    SELECT 
        'Files/data/Sales/Transactions/Transactions.csv',
        'csv',
        'sales_transactions',
        '[]';

    SET IDENTITY_INSERT source_ingest_conn ON;

    INSERT INTO source_ingest_conn 
        (id
        ,connection_id
        ,connection_name
        ,connection_type)
    VALUES (
        1,
        'f7dd02c0-1edb-49fd-a3dc-62ff323eff4f',
        'PeerInsights_BudgetApp',
        'AzureSqlTable')
        
    SET IDENTITY_INSERT source_ingest_conn OFF;

    INSERT INTO source_ingest_obj
        ([connection_id]
        ,[schema_name]
        ,[table_name])

    SELECT 
        1,
        'dbo',
        'CustomerBudgets'
    UNION
    SELECT 
        1,
        'dbo',
        'CustomerGroups';


    INSERT INTO notebook_orchestrator
        ([notebook_name]
        ,[notebook_path]
        ,[cell_timeout]
        ,[retry_count]
        ,[retry_interval]
        ,[dependencies]
        ,[group])
    
    SELECT '3_AquaShack_Load_Dimension_Customer', '3_AquaShack_Load_Dimension_Customer', 300, 1, 10, null, 'default'
    UNION
    SELECT '3_AquaShack_Load_Dimension_Product', '3_AquaShack_Load_Dimension_Product', 300, 1, 10, null, 'default' 
    UNION
    SELECT '3_AquaShack_Load_Dimension_Date', '3_AquaShack_Load_Dimension_Date', 300, 1, 10, null, 'default'
    UNION
    SELECT '4_AquaShack_Load_Fact_Sales', '4_AquaShack_Load_Fact_Sales', 600, 1, 10, '["3_AquaShack_Load_Dimension_CustomerS", "3_AquaShack_Load_Dimension_Product", "3_AquaShack_Load_Dimension_Date"]', 'default';
"""

print("\n→ Populating sample metadata in Fabric SQL Database... ", end="")
fabric_token = notebookutils.credentials.getToken("https://api.fabric.microsoft.com")
conn = get_fabric_database_connection(fabric_token, METADATA_DATABASE.get("properties").get("serverFqdn"), METADATA_DATABASE.get("properties").get("databaseName"))
if conn:
    sql_execute_nonquery(conn, sql_script)
    conn.close

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

client = fabric.FabricRestClient()
sqldatabases = client.get(f"https://api.fabric.microsoft.com/v1/workspaces/{STORE_WORKSPACE}/SQLDatabases").json()

metadata_db = next((item for item in sqldatabases["value"] if item["displayName"] == "Metadata"), None)

if metadata_db:
     sql_fqdn = metadata_db["properties"]["serverFqdn"]
     database_name = metadata_db["properties"]["databaseName"]


# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

landing_item_id = lakehouses.get("Landing").get("id")
sql_database_id = fabric.resolve_item_id("Metadata", "SQLDatabase", STORE_WORKSPACE)

create_sqldb_shortcut(landing_item_id, sql_database_id=sql_database_id, table_name='landing_to_base', path="Tables/dbo/landing_to_base")
create_sqldb_shortcut(landing_item_id, sql_database_id=sql_database_id, table_name='notebook_orchestrator', path="Tables/dbo/notebook_orchestrator")

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }

# CELL ********************

print("\n\033[1m✅ SETUP OF STORE LAYER COMPLETED!\033[0m")

# METADATA ********************

# META {
# META   "language": "python",
# META   "language_group": "jupyter_python"
# META }
